package jdbc;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Marisa
 */
public class secondframe extends javax.swing.JFrame {

    /**
     * Creates new form secondframe
     */
    public secondframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        essn = new javax.swing.JLabel();
        pno = new javax.swing.JLabel();
        hours = new javax.swing.JLabel();
        DoneButton = new javax.swing.JButton();
        essnfeild = new javax.swing.JTextField();
        pnofeild = new javax.swing.JTextField();
        hoursfeild = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Projects");

        essn.setText("essn");

        pno.setText("project number");

        hours.setText("hours");

        DoneButton.setText("Done");
        DoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneButtonActionPerformed(evt);
            }
        });

        essnfeild.setText("jTextField1");


        pnofeild.setText("jTextField2");

        hoursfeild.setText("jTextField3");
 

        addButton.setText("add another");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pno)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(essn)
                    .addComponent(hours))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnofeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(essnfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoursfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(DoneButton)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(essn)
                    .addComponent(essnfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pno)
                    .addComponent(pnofeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hours)
                    .addComponent(hoursfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoneButton)
                    .addComponent(addButton))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void DoneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	String sql = "INSERT INTO WORKS_ON VALUES (?, ?, ?)";
    	String checkhours = "Select SUM(HOURS) from Works_on where ESSN= ? ";
		try
		{
			try {
				Class.forName("oracle.jdbc.driver.OracleDriver");
			}
			catch(ClassNotFoundException e){
				System.out.println("Could not load driver");
			}
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@artemis.vsnet.gmu.edu:1521/vse18c.vsnet.gmu.edu","mmills20","oartoado");
			PreparedStatement ps= con.prepareStatement(sql);
			PreparedStatement preps= con.prepareStatement(checkhours);
			preps.setString(1, essnfeild.getText());
			ResultSet rs=preps.executeQuery();
			if(rs.next()){
				int x=rs.getInt("SUM(Hours)");
				int y= Integer.parseInt(hoursfeild.getText());
				x=x+y;
				//System.out.println(x);
				if(x>40 )  {
					System.out.println("WARNING: Employee can not be assigned more than 40 hours of work");
					String worksOnquery= "SELECT * FROM WORKS_ON";
					Statement stmt = con.createStatement();
					System.out.println("works_on table after update failed");
					ResultSet res = stmt.executeQuery(worksOnquery);
					DBTablePrinter.printResultSet(res);
					return;
				}
				y= Integer.parseInt(hoursfeild.getText());
				if(y>40 )  {
					System.out.println("WARNING: Employee can not be assigned more than 40 hours of work");
					String worksOnquery= "SELECT * FROM WORKS_ON";
					Statement stmt = con.createStatement();
					System.out.println("works_on table after update failed");
					ResultSet res = stmt.executeQuery(worksOnquery);
					DBTablePrinter.printResultSet(res);
					return;
				}
			}
			ps.setString(1, essnfeild.getText());
			ps.setInt(2, Integer.parseInt(pnofeild.getText()));
			ps.setInt(3, Integer.parseInt(hoursfeild.getText()));
			
			ps.executeUpdate();
			
			String worksOnquery= "SELECT * FROM WORKS_ON";
			Statement stmt = con.createStatement();
			System.out.println("works_on table after update");
			ResultSet res = stmt.executeQuery(worksOnquery);
			DBTablePrinter.printResultSet(res);
			con.close();
		}
		catch (Exception e)
		{
			System.out.println("Error Connecting");
			e.printStackTrace();
		}
    }                                          

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	String sql = "INSERT INTO WORKS_ON VALUES (?, ?, ?)";
    	String checkhours = "Select SUM(HOURS) from Works_on where ESSN= ? ";
		try
		{
			try {
				Class.forName("oracle.jdbc.driver.OracleDriver");
			}
			catch(ClassNotFoundException e){
				System.out.println("Could not load driver");
			}
			
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@artemis.vsnet.gmu.edu:1521/vse18c.vsnet.gmu.edu","mmills20","oartoado");
			
			PreparedStatement preps= con.prepareStatement(checkhours);
			preps.setString(1, essnfeild.getText());
			ResultSet rs=preps.executeQuery();
			if(rs.next()){
				int x=rs.getInt("SUM(Hours)");
				int y= Integer.parseInt(hoursfeild.getText());
				x=x+y;
				//System.out.println(x);
				if(x>40) {
					System.out.println("WARNING: Employee can not be assigned more than 40 hours of work");
					return;
				}
				y= Integer.parseInt(hoursfeild.getText());
				if(x>40 )  {
					System.out.println("WARNING: Employee can not be assigned more than 40 hours of work");
					return;
				}
			}
			
			PreparedStatement ps= con.prepareStatement(sql);
			ps.setString(1, essnfeild.getText());
			ps.setInt(2, Integer.parseInt(pnofeild.getText()));
			ps.setInt(3, Integer.parseInt(hoursfeild.getText()));
			
			ps.executeUpdate();
			
			
			con.close();
		}
		catch (Exception e)
		{
			System.out.println("Error Connecting");
			e.printStackTrace();
		}
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(secondframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(secondframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(secondframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(secondframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new secondframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton DoneButton;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel essn;
    private javax.swing.JTextField essnfeild;
    private javax.swing.JLabel hours;
    private javax.swing.JTextField hoursfeild;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel pno;
    private javax.swing.JTextField pnofeild;
    private javax.swing.JCheckBox jCheckBox1;
    // End of variables declaration                   
}
